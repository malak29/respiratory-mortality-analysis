apiVersion: v1
kind: Namespace
metadata:
  name: respiratory-mortality
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: respiratory-api
  namespace: respiratory-mortality
spec:
  replicas: 3
  selector:
    matchLabels:
      app: respiratory-api
  template:
    metadata:
      labels:
        app: respiratory-api
    spec:
      containers:
      - name: api
        image: respiratory-mortality:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: redis-url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: secret-key
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow-service:5000"
        - name: ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/health/liveness
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health/readiness
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: respiratory-api-service
  namespace: respiratory-mortality
spec:
  selector:
    app: respiratory-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: respiratory-mortality
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      containers:
      - name: worker
        image: respiratory-mortality:latest
        command: ["celery", "-A", "app.tasks.celery_app", "worker", "--loglevel=info"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: redis-url
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow-service:5000"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-pvc
  namespace: respiratory-mortality
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: respiratory-mortality
type: Opaque
stringData:
  database-url: "postgresql://user:password@postgres-service:5432/respiratory_db"
  redis-url: "redis://redis-service:6379"
  secret-key: "your-production-secret-key"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: respiratory-api-ingress
  namespace: respiratory-mortality
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - api.respiratory-mortality.com
    secretName: api-tls
  rules:
  - host: api.respiratory-mortality.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: respiratory-api-service
            port:
              number: 80